labs(title = "Histogram showing frequency of cases vs temperature")
ggplot(respiratory_Cases_Clean, aes(x = Temperature, y = Number)) +
geom_bin2d(bins = 25) +
scale_fill_gradient(low = "steelblue", high = "darkred") +
labs(title = "Histogram showing frequency of cases vs temperature") +
theme(plot.title = element_text(hjust = 0.5), legend.title = element_text(face = "bold"))
ggplot(respiratory_Cases_Clean, aes(x = Temperature, y = Number)) +
geom_bin2d(bins = 25) +
scale_fill_gradient(low = "white", high = "darkred") +
labs(title = "Histogram showing frequency of cases vs temperature") +
theme(plot.title = element_text(hjust = 0.5), legend.title = element_text(face = "bold"))
ggplot(respiratory_Cases_Clean, aes(x = Temperature, y = Number)) +
geom_bin2d(bins = 25) +
scale_fill_gradient(low = "white", high = "darkred") +
labs(title = "Histogram showing frequency of cases vs temperature") +
theme(plot.title = element_text(hjust = 0.5), legend.title = element_text(face = "bold")) +
theme_minimal()
colors()
ggplot(respiratory_Cases_Clean, aes(x = Temperature, y = Number)) +
geom_bin2d(bins = 25) +
scale_fill_gradient(low = "antiquewhite", high = "darkred") +
labs(title = "Histogram showing frequency of cases vs temperature") +
theme(plot.title = element_text(hjust = 0.5), legend.title = element_text(face = "bold")) +
theme_minimal()
ggplot(respiratory_Cases_Clean, aes(x = Temperature, y = Number)) +
geom_bin2d(bins = 25) +
scale_fill_gradient(low = "antiquewhite", high = "darkred") +
labs(title = "Histogram showing frequency of cases vs temperature", y = "Cases") +
theme(plot.title = element_text(hjust = 0.5), legend.title = element_text(face = "bold")) +
theme_minimal()
respiratory_Cases_Monthly = respiratory_Cases_Clean %>%
mutate(Date = month(Date)) %>%
group_by(Date) %>%
summarise('Mean_Temp' = mean(Temperature),'Mean_Cases' = mean(Number))
#ggplot(respiratory_Cases_Monthly,aes(x = Date, y = Mean_Temp)) + geom_line()
#ggplot(respiratory_Cases_Monthly,aes(x = Date, y = Mean_Cases)) + geom_line()
ggplot(respiratory_Cases_Monthly, aes(x = Date)) +
geom_line(aes(y = Mean_Temp, color = "Mean Temperature"), size = 1) +
geom_line(aes(y = Mean_Cases, color = "Mean Cases"), size = 1) +
scale_color_manual(values = c("Mean Temperature" = "steelblue", "Mean Cases" = "darkred")) +
labs(x = "Month", y = "Temperature", colour = "Line by Category") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5), legend.title = element_text(face = "bold")) +
ggtitle("Mean Annual Temperature vs Mean Annual Cases \n (Sample Period: 1990-2023)") +
scale_y_continuous(sec.axis = sec_axis(~ ., name = "Mean Cases")) +
scale_x_continuous(limits = c(1, 12),breaks = seq(1, 12, by = 1))
ggplot(respiratory_Cases_Clean, aes(x = Temperature, y = Number)) +
geom_bin2d(bins = 25) +
scale_fill_gradient(low = "antiquewhite", high = "darkred") +
labs(title = "Histogram showing frequency of cases vs temperature", y = "Cases") +
theme(plot.title = element_text(hjust = 0.5), legend.title = element_text(face = "bold")) +
theme_minimal()
respiratory_Cases_Monthly = respiratory_Cases_Clean %>%
mutate(Date = month(Date)) %>%
group_by(Date) %>%
summarise('Mean_Temp' = mean(Temperature),'Mean_Cases' = mean(Number))
#ggplot(respiratory_Cases_Monthly,aes(x = Date, y = Mean_Temp)) + geom_line()
#ggplot(respiratory_Cases_Monthly,aes(x = Date, y = Mean_Cases)) + geom_line()
ggplot(respiratory_Cases_Monthly, aes(x = Date)) +
geom_line(aes(y = Mean_Temp, color = "Mean Temperature"), size = 1) +
geom_line(aes(y = Mean_Cases, color = "Mean Cases"), size = 1) +
scale_color_manual(values = c("Mean Temperature" = "steelblue", "Mean Cases" = "darkred")) +
labs(x = "Month", y = "Temperature", colour = "Line by Category") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5), legend.title = element_text(face = "bold")) +
ggtitle("Mean Annual Temperature vs Mean Annual Cases \n (Sample Period: 1990-2023)") +
scale_y_continuous(sec.axis = sec_axis(~ ., name = "Mean Cases")) +
scale_x_continuous(limits = c(1, 12),breaks = seq(1, 12, by = 1))
ggplot(respiratory_Cases_Clean, aes(x = Temperature, y = Number)) +
geom_bin2d(bins = 25) +
scale_fill_gradient(low = "antiquewhite", high = "darkred") +
labs(title = "Histogram showing frequency of cases vs temperature", y = "Cases") +
theme(plot.title = element_text(hjust = 0.5), legend.title = element_text(face = "bold")) +
theme_minimal()
ggplot(respiratory_Cases_Monthly, aes(x = Date)) +
geom_line(aes(y = Mean_Temp, color = "Mean Temperature"), size = 1) +
geom_line(aes(y = Mean_Cases, color = "Mean Cases"), size = 1) +
scale_color_manual(values = c("Mean Temperature" = "steelblue", "Mean Cases" = "darkred")) +
labs(x = "Month", y = "Temperature", colour = "Line by Category") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5), legend.title = element_text(face = "bold")) +
ggtitle("Mean Annual Temperature vs Mean Annual Cases \n (Sample Period: 1990-2023)") +
scale_y_continuous(sec.axis = sec_axis(~ ., name = "Mean Cases"), limits = c(30,40), breaks - seq(30,40, by = 1)) +
scale_x_continuous(limits = c(1, 12),breaks = seq(1, 12, by = 1))
ggplot(respiratory_Cases_Monthly, aes(x = Date)) +
geom_line(aes(y = Mean_Temp, color = "Mean Temperature"), size = 1) +
geom_line(aes(y = Mean_Cases, color = "Mean Cases"), size = 1) +
scale_color_manual(values = c("Mean Temperature" = "steelblue", "Mean Cases" = "darkred")) +
labs(x = "Month", y = "Temperature", colour = "Line by Category") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5), legend.title = element_text(face = "bold")) +
ggtitle("Mean Annual Temperature vs Mean Annual Cases \n (Sample Period: 1990-2023)") +
scale_y_continuous(sec.axis = sec_axis(~ ., name = "Mean Cases"), limits = c(30,40), breaks = seq(30,40, by = 1)) +
scale_x_continuous(limits = c(1, 12),breaks = seq(1, 12, by = 1))
ggplot(respiratory_Cases_Monthly, aes(x = Date)) +
geom_line(aes(y = Mean_Temp, color = "Mean Temperature"), size = 1) +
geom_line(aes(y = Mean_Cases, color = "Mean Cases"), size = 1) +
scale_color_manual(values = c("Mean Temperature" = "steelblue", "Mean Cases" = "darkred")) +
labs(x = "Month", y = "Temperature", colour = "Line by Category") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5), legend.title = element_text(face = "bold")) +
ggtitle("Mean Annual Temperature vs Mean Annual Cases \n (Sample Period: 1990-2023)") +
scale_y_continuous(sec.axis = sec_axis(~ ., name = "Mean Cases"), breaks = c(30,40)) +
scale_x_continuous(limits = c(1, 12),breaks = seq(1, 12, by = 1))
ggplot(respiratory_Cases_Monthly, aes(x = Date)) +
geom_line(aes(y = Mean_Temp, color = "Mean Temperature"), size = 1) +
geom_line(aes(y = Mean_Cases, color = "Mean Cases"), size = 1) +
scale_color_manual(values = c("Mean Temperature" = "steelblue", "Mean Cases" = "darkred")) +
labs(x = "Month", y = "Temperature", colour = "Line by Category") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5), legend.title = element_text(face = "bold")) +
ggtitle("Mean Annual Temperature vs Mean Annual Cases \n (Sample Period: 1990-2023)") +
scale_y_continuous(sec.axis = sec_axis(~ ., name = "Mean Cases")) +
scale_x_continuous(limits = c(1, 12),breaks = seq(1, 12, by = 1))
ggplot(respiratory_Cases_Monthly, aes(x = Date, y = Mean_Temp)) +
geom_line(color = "blue") +
facet_wrap(~ variable, scales = "free_y", ncol = 1) +
labs(title = "Two Line Graphs with facet_wrap", y = "Value")
rlang::last_trace()
ggplot(respiratory_Cases_Monthly, aes(x = Date, y = Mean_Temp)) +
geom_line(color = "blue") +
facet_wrap(~ Mean_Cases, scales = "free_y", ncol = 1) +
labs(title = "Two Line Graphs with facet_wrap", y = "Value")
ggplot(respiratory_Cases_Monthly, aes(x = Date, y = Mean_Temp)) +
geom_line(color = "blue") +
facet_wrap(Mean_Cases, scales = "free_y", ncol = 1) +
labs(title = "Two Line Graphs with facet_wrap", y = "Value")
ggplot(respiratory_Cases_Monthly, aes(x = Date)) +
geom_line(aes(y = Mean_Temp, color = "Mean Temperature"), size = 1) +
geom_line(aes(y = Mean_Cases, color = "Mean Cases"), size = 1) +
scale_color_manual(values = c("Mean Temperature" = "steelblue", "Mean Cases" = "darkred")) +
labs(x = "Month", y = "Temperature", colour = "Line by Category") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5), legend.title = element_text(face = "bold")) +
ggtitle("Mean Annual Temperature vs Mean Annual Cases \n (Sample Period: 1990-2023)") +
scale_y_continuous(sec.axis = sec_axis(~ ., name = "Mean Cases")) +
scale_x_continuous(limits = c(1, 12),breaks = seq(1, 12, by = 1))
ggplot(respiratory_Cases_Monthly,aes(x = Date, y = Mean_Temp)) + geom_line()
ggplot(respiratory_Cases_Monthly,aes(x = Date, y = Mean_Cases)) + geom_line()
ggplot(respiratory_Cases_Monthly,aes(x = Date, y = Mean_Temp)) + geom_line()
ggplot(respiratory_Cases_Monthly,aes(x = Date, y = Mean_Cases)) + geom_line()
ggplot(respiratory_Cases_Clean, aes(x = Temperature, y = Number)) +
geom_bin2d(bins = 25) +
scale_fill_gradient(low = "antiquewhite", high = "darkred") +
labs(title = "Histogram showing frequency of cases vs temperature", y = "Cases") +
theme(plot.title = element_text(hjust = 0.5), legend.title = element_text(face = "bold")) +
theme_minimal()
Maltese_Dogs_RespiratoryIssues = filter(maltese_Dogs, RespiratoryIssues == 1)
Maltese_Dogs_NonRespiratoryIssues = filter(maltese_Dogs, RespiratoryIssues == 0)
ggplot(Maltese_Dogs,aes(x = RespiratoryIssues, y = Weight)) +
geom_boxplot(aes(fill = RespiratoryIssues))
ggplot(maltese_Dogs,aes(x = RespiratoryIssues, y = Weight)) +
geom_boxplot(aes(fill = RespiratoryIssues))
maltese_Dogs = maltese_Dogs %>%
mutate(Respiratory_Issues = case_when(RespiratoryIssues == 1 ~ "Respiratory Issues",
RespiratoryIssues == 0 ~ "No Respiratory Issues"))
maltese_Dogs = maltese_Dogs %>%
mutate(RespiratoryIssues = case_when(RespiratoryIssues == 1 ~ "Respiratory Issues",
RespiratoryIssues == 0 ~ "No Respiratory Issues"))
maltese_Dogs = read.csv("Maltese.csv")
setwd("C:/Users/harry/Desktop/Uni Work/Data Science/CW1/Data")
maltese_Dogs = read.csv("Maltese.csv")
maltese_Dogs = maltese_Dogs %>%
mutate(Respiratory_Issues = case_when(RespiratoryIssues == 1 ~ "Respiratory Issues",
RespiratoryIssues == 0 ~ "No Respiratory Issues"))
ggplot(maltese_Dogs,aes(x = Respiratory_Issues, y = Weight)) +
geom_boxplot(aes(fill = Respiratory_Issues))
ggplot(maltese_Dogs, aes(x=Respiratory_Issues, y=Weight)) +
geom_boxplot()
ggplot(maltese_Dogs, aes(x=Respiratory_Issues, y=Age)) +
geom_boxplot()
ggplot(maltese_Dogs, aes(x=Respiratory_Issues, y=Age, fill = "orange")) +
geom_boxplot()
ggplot(maltese_Dogs, aes(x=Respiratory_Issues, y=Age, fill = Respiratory_Issues)) +
geom_boxplot()
ggplot(maltese_Dogs, aes(x=Respiratory_Issues, y=Age, fill = Respiratory_Issues)) +
geom_boxplot() + theme_minimal()
maltese_Dogs = mutate(maltese_Dogs,Respiratory_Issues = case_when(
RespiratoryIssues == 1 ~ "Respiratory Issues",
RespiratoryIssues == 0 ~ "No Respiratory Issues"))
AgePlot = ggplot(maltese_Dogs, aes(x=Respiratory_Issues, y=Age, fill = Respiratory_Issues)) +
geom_boxplot() + theme_minimal()
WeightPlot = ggplot(maltese_Dogs, aes(x=Respiratory_Issues, y=Weight, fill = Respiratory_Issues)) +
geom_boxplot() + theme_minimal()
HeightPlot = ggplot(maltese_Dogs, aes(x=Respiratory_Issues, y=Height, fill = Respiratory_Issues)) +
geom_boxplot() + theme_minimal()
ggarrange(AgePlot,WeightPlot,HeightPlot)
maltese_Dogs = mutate(maltese_Dogs,Respiratory_Issues = case_when(
RespiratoryIssues == 1 ~ "Respiratory Issues",
RespiratoryIssues == 0 ~ "No Respiratory Issues"))
ggplot(maltese_Dogs, aes(x=Respiratory_Issues, y=Age, fill = Respiratory_Issues)) +
geom_boxplot() + theme_minimal() + labs(Title = "Age vs Respiratory Issue Comparison for maltese dogs")
ggplot(maltese_Dogs, aes(x=Respiratory_Issues, y=Weight, fill = Respiratory_Issues)) +
geom_boxplot() + theme_minimal() + labs(Title = "Weight vs Respiratory Issue Comparison for maltese dogs")
ggplot(maltese_Dogs, aes(x=Respiratory_Issues, y=Height, fill = Respiratory_Issues)) +
geom_boxplot() + theme_minimal() + labs(Title = "Height vs Respiratory Issue Comparison for maltese dogs")
maltese_Dogs = mutate(maltese_Dogs,Respiratory_Issues = case_when(
RespiratoryIssues == 1 ~ "Respiratory Issues",
RespiratoryIssues == 0 ~ "No Respiratory Issues"))
ggplot(maltese_Dogs, aes(x=Respiratory_Issues, y=Age, fill = Respiratory_Issues)) +
geom_boxplot() + theme_minimal() + labs(Title = "Age vs Respiratory Issue Comparison for maltese dogs")
ggplot(maltese_Dogs, aes(x=Respiratory_Issues, y=Weight, fill = Respiratory_Issues)) +
geom_boxplot() + theme_minimal() + labs(Title = "Weight vs Respiratory Issue Comparison for maltese dogs")
ggplot(maltese_Dogs, aes(x=Respiratory_Issues, y=Height, fill = Respiratory_Issues)) +
geom_boxplot() + theme_minimal() + labs(Title = "Height vs Respiratory Issue Comparison for maltese dogs")
ggplot(maltese_Dogs, aes(x=Respiratory_Issues, y=Age, fill = Respiratory_Issues)) +
geom_boxplot() + theme_minimal() + labs(Title = "Age vs Respiratory Issue Comparison for maltese dogs", x = "Respiratory Issues Classification", y = "Age (Human Years)")
ggplot(maltese_Dogs, aes(x=Respiratory_Issues, y=Weight, fill = Respiratory_Issues)) +
geom_boxplot() + theme_minimal() + labs(Title = "Weight vs Respiratory Issue Comparison for maltese dogs", x = "Respiratory Issues Classification", y = "Weight (pounds)")
ggplot(maltese_Dogs, aes(x=Respiratory_Issues, y=Height, fill = Respiratory_Issues)) +
geom_boxplot() + theme_minimal() + labs(Title = "Height vs Respiratory Issue Comparison for maltese dogs", x = "Respiratory Issues Classification", y = "Height (inches)")
ggplot(Breed_Analysis,aes(Date_col)) +
geom_line(aes(y = Total_Beagles, color = "Total Beagle Population")) +
geom_line(aes(y = Total_Dachshund, color = "Total Dachshund Population")) +
geom_line(aes(y = Total_Maltese, color = "Total Maltese Population")) +
theme(legend.title = element_text(face = "bold")) +
labs(colour = "Line by Breed", subtitle = "Figure 1.2") +
xlab("Sample Period (Monthly)") +
ylab("Total Population") +
coord_cartesian(xlim = c(make_date(1990,1,1),make_date(2023,9,1)),
ylim = c(75000,150000)) + theme_minimal() +
scale_x_date(date_breaks = "5 years",date_labels = "%Y")
ggplot(Breed_Analysis,aes(Date_col)) +
geom_line(aes(y = Total_Beagles, color = "Total Beagle Population")) +
geom_line(aes(y = Total_Dachshund, color = "Total Dachshund Population")) +
geom_line(aes(y = Total_Maltese, color = "Total Maltese Population")) +
theme(legend.title = element_text(face = "bold")) +
labs(colour = "Line by Breed") +
xlab("Sample Period (Monthly)") +
ylab("Total Population") +
coord_cartesian(xlim = c(make_date(1990,1,1),make_date(2023,9,1)),
ylim = c(75000,150000)) + theme_minimal() +
scale_x_date(date_breaks = "5 years",date_labels = "%Y")
ggplot(Breed_Analysis,aes(Date_col)) +
geom_line(aes(y = Total_Beagles, color = "Total Beagle Population")) +
geom_line(aes(y = Total_Dachshund, color = "Total Dachshund Population")) +
geom_line(aes(y = Total_Maltese, color = "Total Maltese Population")) +
theme(legend.title = element_text(face = "bold")) +
labs(colour = "Line by Breed", subtitle = "Figure 1.2", Title = "Breed Population over time") +
xlab("Sample Period (Monthly)") +
ylab("Total Population") +
coord_cartesian(xlim = c(make_date(1990,1,1),make_date(2023,9,1)),
ylim = c(75000,150000)) + theme_minimal() +
scale_x_date(date_breaks = "5 years",date_labels = "%Y")
ggplot(Breed_Analysis,aes(Date_col)) +
geom_line(aes(y = Total_Beagles, color = "Total Beagle Population")) +
geom_line(aes(y = Total_Dachshund, color = "Total Dachshund Population")) +
geom_line(aes(y = Total_Maltese, color = "Total Maltese Population")) +
theme(legend.title = element_text(face = "bold")) +
labs(colour = "Line by Breed", Title = "Breed Population over time", subtitle = "Figure 1.2") +
xlab("Sample Period (Monthly)") +
ylab("Total Population") +
coord_cartesian(xlim = c(make_date(1990,1,1),make_date(2023,9,1)),
ylim = c(75000,150000)) + theme_minimal() +
scale_x_date(date_breaks = "5 years",date_labels = "%Y")
ggplot(Breed_Analysis,aes(Date_col)) +
geom_line(aes(y = Total_Beagles, color = "Total Beagle Population")) +
geom_line(aes(y = Total_Dachshund, color = "Total Dachshund Population")) +
geom_line(aes(y = Total_Maltese, color = "Total Maltese Population")) +
theme(legend.title = element_text(face = "bold")) +
labs(colour = "Line by Breed",
Title = "Breed Population over time",
subtitle = "Figure 1.2",
x = "Sample Period (Monthly)",
y = "Total Population") +
coord_cartesian(xlim = c(make_date(1990,1,1),make_date(2023,9,1)),
ylim = c(75000,150000)) + theme_minimal() +
scale_x_date(date_breaks = "5 years",date_labels = "%Y")
ggplot(respiratory_Cases_Clean, aes(x = Temperature, y = Number)) +
geom_bin2d(bins = 25) +
scale_fill_gradient(low = "antiquewhite", high = "darkred") +
labs(title = "Histogram showing frequency of cases vs temperature", y = "Cases") +
theme(plot.title = element_text(hjust = 0.5), legend.title = element_text(face = "bold")) +
theme_minimal()
ggplot(respiratory_Cases_Clean, aes(x = Temperature, y = Number)) +
geom_bin2d(bins = 25) +
scale_fill_gradient(low = "antiquewhite", high = "darkred") +
labs(title = "Two Dimensional Histogram showing frequency of cases vs temperature", y = "Cases") +
theme(plot.title = element_text(hjust = 0.5), legend.title = element_text(face = "bold")) +
theme_minimal()
ggplot(respiratory_Cases_Clean, aes(x = Temperature, y = Number)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(title = "Temperature vs. Cases", x = "Temperature", y = "Cases")
ggplot(respiratory_Cases_Clean, aes(x = Temperature, y = Number)) +
geom_bin2d(bins = 25) +
scale_fill_gradient(low = "antiquewhite", high = "darkred") +
labs(title = "Two Dimensional Histogram showing frequency of cases vs temperature", y = "Cases") +
theme(plot.title = element_text(hjust = 0.5), legend.title = element_text(face = "bold")) +
theme_minimal()
ggplot(respiratory_Cases_Clean, aes(x = Temperature, y = Number)) +
geom_bin2d() +
scale_fill_gradient(low = "antiquewhite", high = "darkred") +
labs(title = "Two Dimensional Histogram showing frequency of cases vs temperature", y = "Cases") +
theme(plot.title = element_text(hjust = 0.5), legend.title = element_text(face = "bold")) +
theme_minimal()
ggplot(respiratory_Cases_Clean, aes(x = Temperature, y = Number)) +
geom_bin2d(bins = 25) +
scale_fill_gradient(low = "antiquewhite", high = "darkred") +
labs(title = "Two Dimensional Histogram showing frequency of cases vs temperature", y = "Cases") +
theme(plot.title = element_text(hjust = 0.5), legend.title = element_text(face = "bold")) +
theme_minimal()
cor(respiratory_Cases_Clean$Temperature,respiratory_Cases_Clean$Number)
ggplot(respiratory_Cases_Monthly, aes(x = Date)) +
geom_line(aes(y = Mean_Temp, color = "Mean Temperature"), size = 1) +
geom_line(aes(y = Mean_Cases, color = "Mean Cases"), size = 1) +
scale_color_manual(values = c("Mean Temperature" = "steelblue", "Mean Cases" = "darkred")) +
labs(x = "Month", y = "Temperature", colour = "Line by Category", subtitle = "Figure 1.3") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5), legend.title = element_text(face = "bold")) +
ggtitle("Mean Annual Temperature vs Mean Annual Cases \n (Sample Period: 1990-2023)") +
scale_y_continuous(sec.axis = sec_axis(~ ., name = "Mean Cases")) +
scale_x_continuous(limits = c(1, 12),breaks = seq(1, 12, by = 1))
setwd("C:/Users/harry/Desktop/Uni Work/Data Science/CW1/Data")
Fires = read.csv("Fires.csv")
Housing_Reg = read.csv("Housing Register.csv")
View(Fires)
hour(2022-1-1 0:11)
ymd_hm(2022-1-1 0:11)
Fires = Fires %>% mutate(Time_Clean = ymd_hm(Date))
Fires = read.csv("Fires.csv")
Fires = Fires %>% mutate(Date_Clean = ymd_hm(Date),Hour = hour(Date_Clean), month = month(Date_Clean), year = year(Date_Clean))
Fires = read.csv("Fires.csv")
Fires = Fires %>% mutate(Date_Clean = ymd_hm(Date),minute = minute(Date_Clean),hour = hour(Date_Clean), day = day(Date_Clean), month = month(Date_Clean), year = year(Date_Clean))
ggplot(Fires,aes(x = time)) + coord_polar(theta = 'x') + geom_density() +
labs(x = 'Hour of Day')
Fires = read.csv("Fires.csv")
Fires = Fires %>% mutate(Date_Clean = ymd_hm(Date),minute = minute(Date_Clean),hour = hour(Date_Clean), day = day(Date_Clean), month = month(Date_Clean), year = year(Date_Clean), time = hour + (minute/60))
ggplot(Fires,aes(x = time)) + coord_polar(theta = 'x') + geom_density() +
labs(x = 'Hour of Day')
ggplot(Fires,aes(x = time)) + coord_polar(theta = 'x') + geom_density() +
labs(x = 'Hour of Day')
ggplot(Fires,aes(x = time)) + coord_polar(theta = 'x') + geom_density() +
labs(x = 'Hour of Day') + scale_x_continuous(breaks = seq(0,24,1),limits = c(1,24)))
ggplot(Fires,aes(x = time)) + coord_polar(theta = 'x') + geom_density() +
labs(x = 'Hour of Day') + scale_x_continuous(breaks = seq(0,24,1),limits = c(1,24))
ggplot(Fires,aes(x = time)) + coord_polar(theta = 'x') + geom_density() +
labs(x = 'Hour of Day') + scale_x_continuous(breaks = seq(0,24,1),limits = c(0,23))
ggplot(Fires,aes(x = time)) + coord_polar(theta = 'x') + geom_density() +
labs(x = 'Hour of Day') + scale_x_continuous(breaks = seq(0,24,1),limits = c(0,24))
ggplot(Fires,aes(x = time)) + coord_polar(theta = 'x') + geom_density() +
labs(x = 'Hour of Day') + scale_x_continuous(breaks = seq(0,24,1),limits = c(0,24)) + theme_minimal()
ggplot(Fires,aes(x = time)) + coord_polar(theta = 'x') + geom_density() +
labs(x = 'Hour of Day') + scale_x_continuous(breaks = seq(0,23,1),limits = c(0,24)) + theme_minimal()
ggplot(Fires,aes(x = time)) + coord_polar(theta = 'x') + geom_density() +
labs(x = 'Hour of Day',Title = "A plot showing the frequency of fires each day") + facet_wrap(~ Cause) scale_x_continuous(breaks = seq(0,23,1),limits = c(0,24)) + theme_minimal()
ggplot(Fires,aes(x = time)) + coord_polar(theta = 'x') + geom_density() +
labs(x = 'Hour of Day',Title = "A plot showing the frequency of fires each day") + facet_wrap(vars(Cause)) scale_x_continuous(breaks = seq(0,23,1),limits = c(0,24)) + theme_minimal()
ggplot(Fires,aes(x = time)) + coord_polar(theta = 'x') + geom_density() +
labs(x = 'Hour of Day',Title = "A plot showing the frequency of fires each day") + facet_wrap(vars(Cause)) + scale_x_continuous(breaks = seq(0,23,1),limits = c(0,24)) + theme_minimal()
Casualties_by_causation_analysis = Fires %>% group_by(Cause) %>%  summarise(Total_Casualties = sum(Casualties))
View(Casualties_by_causation_analysis)
Casualties_by_causation_analysis = Fires %>% group_by(Cause) %>%  summarise(Total_Casualties = sum(Casualties),year)
Casualties_by_causation_analysis = Fires %>% group_by(Cause,year) %>%  summarise(Total_Casualties = sum(Casualties))
View(Casualties_by_causation_analysis)
min(Fires$year)
max(Fires$year)
Casualties_by_causation_analysis = Fires %>% group_by(Cause,month) %>%  summarise(Total_Casualties = sum(Casualties))
View(Casualties_by_causation_analysis)
ggplot(Casualties_by_causation_analysis, aes(fill=Cause, y=Total_Casualties, x=Month)) +
geom_bar(position="stack", stat="identity")
ggplot(Casualties_by_causation_analysis, aes(fill=Cause, y=Total_Casualties, x=month)) +
geom_bar(position="stack", stat="identity")
ggplot(Casualties_by_causation_analysis, aes(fill=Cause, y=Total_Casualties, x=month)) +
geom_bar(position="stack", stat="identity") + theme_minimal()
ggplot(Casualties_by_causation_analysis, aes(y=Total_Casualties, x=Cause)) +
geom_bar(position="stack", stat="identity") + theme_minimal()
Casualties_by_causation_analysis = Fires %>%
group_by(Cause) %>%
summarise(Total_Casualties = sum(Casualties), Total_Incidents = n())
ggplot(Casualties_by_causation_analysis, aes(x = Cause, y = risk_likelihood)) + geom_bar()
Casualties_by_causation_analysis = Fires %>%
group_by(Cause) %>%
summarise(Total_Casualties = sum(Casualties),
Total_Incidents = n(),
risk_likelihood = (Total_Casualties/Total_Incidents))
ggplot(Casualties_by_causation_analysis, aes(x = Cause, y = risk_likelihood)) + geom_bar()
ggplot(Casualties_by_causation_analysis, aes(x = Cause, y = risk_likelihood)) + geom_bar(position="fill", stat="identity")
ggplot(Casualties_by_causation_analysis, aes(x = Cause, y = risk_likelihood)) + geom_bar()
ggplot(Casualties_by_causation_analysis, aes(x = Cause, y = risk_likelihood)) + geom_bar(stat = "identity")
ggplot(Casualties_by_causation_analysis, aes(x = Cause, y = risk_likelihood)) + geom_bar(stat = "identity") + theme_minimal()
ggplot(Casualties_by_causation_analysis, aes(x = Cause, y = risk_likelihood, fill = "orange")) + geom_bar(stat = "identity") + theme_minimal()
ggplot(Casualties_by_causation_analysis, aes(x = Cause, y = risk_likelihood, fill = "purple")) + geom_bar(stat = "identity") + theme_minimal()
ggplot(Casualties_by_causation_analysis, aes(x = Cause, y = risk_likelihood)) + geom_bar(stat = "identity") + theme_minimal()
Casualties_by_causation_analysis = Fires %>%
group_by(Cause) %>%
summarise(Total_Casualties = sum(Casualties),
Total_Incidents = n(),
risk_likelihood = 100*(Total_Casualties/Total_Incidents))
ggplot(Casualties_by_causation_analysis, aes(x = Cause, y = risk_likelihood)) + geom_bar(stat = "identity") + theme_minimal() + labs(x = "Cause of Fire", y = "Percentage of incidents resulting in fatality")
ggplot(Casualties_by_causation_analysis, aes(x = Cause, y = risk_likelihood)) + geom_bar(stat = "identity") + theme_minimal() + labs(x = "Cause of Fire", y = "Percentage of incidents resulting in fatality (%)")
ggplot(Casualties_by_causation_analysis, aes(x = Cause, y = risk_likelihood)) + geom_bar(stat = "identity") + theme_minimal() + labs(x = "Cause of Fire", y = "Percentage of incidents resulting in fatality (%)", title = "Fatality risk by causation")
ggplot(Casualties_by_causation_analysis, aes(x = Cause, y = risk_likelihood)) + geom_bar(stat = "identity") + theme_minimal() + labs(x = "Cause of Fire", y = "Percentage of incidents resulting in fatality (%)", title = "Fatality Risk by Causation")
ggplot(Casualties_by_causation_analysis, aes(x = Cause, y = risk_likelihood)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(x = "Cause of Fire",
y = "Percentage of incidents resulting in fatality (%)",
title = "Fatality Risk by Causation") +
scale_fill_manual(values = c("red", "green", "blue"))
ggplot(Casualties_by_causation_analysis, aes(x = Cause, y = risk_likelihood)) +
geom_bar(stat = "identity",color="blue", fill=rgb(0.1,0.4,0.5,0.7)) +
theme_minimal() +
labs(x = "Cause of Fire",
y = "Percentage of incidents resulting in fatality (%)",
title = "Fatality Risk by Causation")
ggplot(Casualties_by_causation_analysis, aes(x = Cause, y = risk_likelihood)) +
geom_bar(stat = "identity", fill=rgb(0.1,0.4,0.5,0.7)) +
theme_minimal() +
labs(x = "Cause of Fire",
y = "Percentage of incidents resulting in fatality (%)",
title = "Fatality Risk by Causation")
ggplot(Casualties_by_causation_analysis, aes(x = Cause, y = Total_Incidents, fill = Total_Casualties)) +
geom_col(position = "fill")
ggplot(Casualties_by_causation_analysis, aes(x = Cause, y = Total_Incidents, fill = Total_Casualties)) +
geom_col()
ggplot(Casualties_by_causation_analysis, aes(x = Cause, y = Total_Incidents)) +
geom_col(position = "fill")
ggplot(Casualties_by_causation_analysis, aes(x = Cause, y = Total_Incidents, fill = Total_Casualties)) +
geom_col(position = "fill")
ggplot(Casualties_by_causation_analysis, aes(x = Cause, y = Total_Incidents, fill = Total_Casualties)) +
geom_col(position = "fill",stat = "identity")
ggplot(Casualties_by_causation_analysis, aes(x = Cause, y = risk_likelihood)) +
geom_bar(stat = "identity", fill=rgb(0.1,0.4,0.5,0.7)) +
theme_minimal() +
labs(x = "Cause of Fire",
y = "Percentage of incidents resulting in fatality (%)",
title = "Fatality Risk by Causation")
ggplot(Casualties_by_causation_analysis, aes(x = Cause, y = risk_likelihood)) +
geom_bar(stat = "identity", fill=rgb(0.1,0.4,0.5,0.7)) +
theme_minimal() +
labs(x = "Cause of Fire",
y = "Percentage of incidents resulting in fatality (%)",
title = "Fatality Risk by Causation")
ggplot(Fires, aes(x = Cause, y = n(), fill = Casualties)) +
geom_col(position = "fill",stat = "identity")
ggplot(Casualties_by_causation_analysis, aes(x = Cause, y = risk_likelihood)) +
geom_bar(stat = "identity", fill=rgb(0.1,0.4,0.5,0.7)) +
theme_minimal() +
labs(x = "Cause of Fire",
y = "Percentage of incidents resulting in fatality (%)",
title = "Fatality Risk by Causation")
ggplot(Casualties_by_causation_analysis, aes(x = Cause, y = risk_likelihood)) +
geom_bar(stat = "identity", fill=rgb(0.1,0.4,0.5,0.7)) +
theme_minimal() +
labs(x = "Cause of Fire",
y = "Percentage of incidents resulting in fatality (%)",
title = "Fatality Risk by Causation") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(Casualties_by_causation_analysis, aes(x = Cause, y = risk_likelihood)) +
geom_bar(stat = "identity", fill=rgb(0.1,0.4,0.5,0.7)) +
theme_minimal() +
labs(x = "Cause of Fire",
y = "Percentage of incidents resulting in fatality (%)",
title = "Fatality Risk by Causation") +
theme(plot.title = element_text(hjust = 0.5)) +
coord_cartesian(xlim = c(0,0.25)))
ggplot(Casualties_by_causation_analysis, aes(x = Cause, y = risk_likelihood)) +
geom_bar(stat = "identity", fill=rgb(0.1,0.4,0.5,0.7)) +
theme_minimal() +
labs(x = "Cause of Fire",
y = "Percentage of incidents resulting in fatality (%)",
title = "Fatality Risk by Causation") +
theme(plot.title = element_text(hjust = 0.5)) +
coord_cartesian(xlim = c(0,0.25))
ggplot(Casualties_by_causation_analysis, aes(x = Cause, y = risk_likelihood)) +
geom_bar(stat = "identity", fill=rgb(0.1,0.4,0.5,0.7)) +
theme_minimal() +
labs(x = "Cause of Fire",
y = "Percentage of incidents resulting in fatality (%)",
title = "Fatality Risk by Causation") +
theme(plot.title = element_text(hjust = 0.5)) +
coord_cartesian(ylim = c(0,0.25))
ggplot(Casualties_by_causation_analysis, aes(x = Cause, y = risk_likelihood)) +
geom_bar(stat = "identity", fill=rgb(0.1,0.4,0.5,0.7)) +
theme_minimal() +
labs(x = "Cause of Fire",
y = "Percentage of incidents resulting in fatality (%)",
title = "Fatality Risk by Causation") +
theme(plot.title = element_text(hjust = 0.5)) +
coord_cartesian(ylim = c(0,25))
ggplot(Casualties_by_causation_analysis, aes(x = Cause, y = risk_likelihood)) +
geom_bar(stat = "identity", fill=rgb(0.1,0.4,0.5,0.7)) +
theme_minimal() +
labs(x = "Cause of Fire",
y = "Percentage of incidents resulting in fatality (%)",
title = "Fatality Risk by Causation") +
theme(plot.title = element_text(hjust = 0.5)) +
coord_cartesian(ylim = c(0,15))
ggplot(Casualties_by_causation_analysis, aes(x = Cause, y = Total_Casualties)) +
geom_bar(stat = "identity", fill=rgb(0.1,0.4,0.5,0.7)) +
theme_minimal() +
labs(x = "Cause of Fire",
y = "Total Casualties",
title = "Casualties by Cause") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(Casualties_by_causation_analysis, aes(x = Cause, y = Total_Casualties)) +
geom_bar(stat = "identity", fill=rgb(0.1,0.4,0.5,0.7)) +
theme_minimal() +
labs(x = "Cause of Fire",
y = "Total Casualties",
title = "Casualties by Cause") +
theme(plot.title = element_text(hjust = 0.5)) +
coord_cartesian(ylim = c(0,1500))
ggplot(Casualties_by_causation_analysis, aes(x = Cause, y = risk_likelihood)) +
geom_bar(stat = "identity", fill=rgb(0.1,0.4,0.5,0.7)) +
theme_minimal() +
labs(x = "Cause of Fire",
y = "Percentage of incidents resulting in fatality (%)",
title = "Fatality Risk by Causation") +
theme(plot.title = element_text(hjust = 0.5)) +
coord_cartesian(ylim = c(0,15))
